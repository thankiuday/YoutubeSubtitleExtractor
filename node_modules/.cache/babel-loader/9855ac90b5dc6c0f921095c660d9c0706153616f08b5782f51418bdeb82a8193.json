{"ast":null,"code":"var _jsxFileName = \"D:\\\\YoutubeSubtitleExtractor\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PROXY_URL = 'http://localhost:3001';\nconst MAX_RETRIES = 3;\nconst RETRY_DELAY = 500;\nconst languages = [{\n  code: 'en',\n  name: 'English',\n  available: true\n}, {\n  code: 'hi',\n  name: 'Hindi',\n  available: true\n}, {\n  code: 'es',\n  name: 'Spanish',\n  available: true\n}, {\n  code: 'fr',\n  name: 'French',\n  available: true\n}, {\n  code: 'de',\n  name: 'German',\n  available: true\n}, {\n  code: 'it',\n  name: 'Italian',\n  available: true\n}, {\n  code: 'pt',\n  name: 'Portuguese',\n  available: true\n}, {\n  code: 'ru',\n  name: 'Russian',\n  available: true\n}, {\n  code: 'ja',\n  name: 'Japanese',\n  available: true\n}, {\n  code: 'ko',\n  name: 'Korean',\n  available: true\n}, {\n  code: 'zh',\n  name: 'Chinese',\n  available: true\n}];\nfunction Home() {\n  _s();\n  const [url, setUrl] = useState('');\n  const [videoId, setVideoId] = useState('');\n  const [selectedLanguage, setSelectedLanguage] = useState('en');\n  const [subtitles, setSubtitles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loadingStatus, setLoadingStatus] = useState('');\n  const [error, setError] = useState('');\n  const handleUrlChange = useCallback(e => {\n    const newUrl = e.target.value;\n    setUrl(newUrl);\n    if (newUrl !== url) {\n      setSubtitles([]);\n      setError('');\n    }\n  }, [url]);\n  const fetchWithRetry = async (url, options = {}, retries = MAX_RETRIES) => {\n    try {\n      const response = await fetch(url, options);\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || getErrorMessage(response.status));\n      }\n      return await response.json();\n    } catch (error) {\n      if (retries > 0) {\n        console.log(`Retrying... ${retries} attempts left`);\n        await new Promise(resolve => setTimeout(resolve, RETRY_DELAY));\n        return fetchWithRetry(url, options, retries - 1);\n      }\n      throw error;\n    }\n  };\n  const getErrorMessage = status => {\n    switch (status) {\n      case 400:\n        return 'Invalid request. Please check your input.';\n      case 404:\n        return 'No captions found for this video. Please try another video.';\n      case 500:\n        return 'Server error. Please try again later.';\n      default:\n        return 'Something went wrong. Please try again.';\n    }\n  };\n  const extractVideoId = url => {\n    const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n    const match = url.match(regExp);\n    return match && match[2].length === 11 ? match[2] : null;\n  };\n  const fetchSubtitles = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      setSubtitles(null);\n\n      // Extract video ID from URL\n      const extractedVideoId = extractVideoId(url);\n      if (!extractedVideoId) {\n        setError('Please enter a valid YouTube URL');\n        setLoading(false);\n        return;\n      }\n      setVideoId(extractedVideoId);\n\n      // Fetch available caption tracks\n      setLoadingStatus('Fetching available captions...');\n      const tracksResponse = await fetchWithRetry(`${PROXY_URL}/api/subtitles/list?videoId=${extractedVideoId}`);\n      const tracksData = await tracksResponse.json();\n      if (!tracksData || !Array.isArray(tracksData) || tracksData.length === 0) {\n        setError('No captions available for this video. Please try another video.');\n        setLoading(false);\n        return;\n      }\n\n      // Find the selected language track\n      let selectedTrack = tracksData.find(track => track.languageCode === selectedLanguage);\n\n      // If no manual captions found, try auto-generated\n      if (!selectedTrack) {\n        setLoadingStatus(`No manual captions found for ${selectedLanguage}. Trying auto-generated captions...`);\n        selectedTrack = tracksData.find(track => track.languageCode === selectedLanguage && track.kind === 'asr');\n      }\n\n      // If still no captions found, try English as fallback\n      if (!selectedTrack) {\n        setLoadingStatus('No captions found in selected language. Trying English captions...');\n        selectedTrack = tracksData.find(track => track.languageCode === 'en');\n      }\n\n      // If still no captions, show error\n      if (!selectedTrack) {\n        setError('No captions available for this video. Please try another video.');\n        setLoading(false);\n        return;\n      }\n\n      // Fetch subtitles\n      setLoadingStatus('Fetching subtitles...');\n      const subtitlesResponse = await fetchWithRetry(`${PROXY_URL}/api/subtitles/fetch?videoId=${extractedVideoId}&trackId=${selectedTrack.id}`);\n      const subtitlesData = await subtitlesResponse.json();\n      if (!subtitlesData || !subtitlesData.subtitles || !Array.isArray(subtitlesData.subtitles)) {\n        setError('Unable to fetch subtitles. Please try again later.');\n        setLoading(false);\n        return;\n      }\n      setSubtitles(subtitlesData.subtitles);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching subtitles:', error);\n      setError(error.message || 'An error occurred while fetching subtitles. Please try again.');\n      setLoading(false);\n    }\n  };\n  const downloadSubtitles = () => {\n    if (subtitles.length === 0) return;\n    const textContent = subtitles.map(subtitle => subtitle.text).join('\\n\\n');\n    const blob = new Blob([textContent], {\n      type: 'text/plain;charset=utf-8'\n    });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    const filename = `subtitles_${videoId}_${selectedLanguage}.txt`;\n    link.setAttribute('download', filename);\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(url);\n  };\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    initial: {\n      opacity: 0,\n      y: 20\n    },\n    animate: {\n      opacity: 1,\n      y: 0\n    },\n    exit: {\n      opacity: 0,\n      y: -20\n    },\n    className: \"container mx-auto px-4 py-8\",\n    children: [/*#__PURE__*/_jsxDEV(motion.h1, {\n      initial: {\n        opacity: 0,\n        y: -20\n      },\n      animate: {\n        opacity: 1,\n        y: 0\n      },\n      className: \"text-3xl font-bold text-center mb-8\",\n      children: \"YouTube Subtitle Extractor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n      initial: {\n        opacity: 0,\n        scale: 0.95\n      },\n      animate: {\n        opacity: 1,\n        scale: 1\n      },\n      className: \"max-w-2xl mx-auto bg-white rounded-lg shadow-lg p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"url\",\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"YouTube URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"url\",\n            value: url,\n            onChange: handleUrlChange,\n            placeholder: \"Enter YouTube video URL\",\n            className: \"w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"language\",\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Language\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"language\",\n            value: selectedLanguage,\n            onChange: e => setSelectedLanguage(e.target.value),\n            className: \"w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500\",\n            children: languages.map(lang => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: lang.code,\n              children: lang.name\n            }, lang.code, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n          whileHover: {\n            scale: 1.02\n          },\n          whileTap: {\n            scale: 0.98\n          },\n          onClick: fetchSubtitles,\n          disabled: loading || !url,\n          className: `w-full py-2 px-4 rounded-md text-white font-medium ${loading || !url ? 'bg-gray-400 cursor-not-allowed' : 'bg-blue-600 hover:bg-blue-700'}`,\n          children: loading ? 'Extracting...' : 'Extract Subtitles'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), loadingStatus && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1\n        },\n        className: \"mt-4 text-center text-gray-600\",\n        children: loadingStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          y: 10\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        className: \"mt-4 p-4 bg-red-50 border border-red-200 rounded-md text-red-600\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this), subtitles && subtitles.length > 0 && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          y: 20\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        className: \"mt-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold\",\n            children: \"Extracted Subtitles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n            whileHover: {\n              scale: 1.05\n            },\n            whileTap: {\n              scale: 0.95\n            },\n            onClick: downloadSubtitles,\n            className: \"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700\",\n            children: \"Download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-50 p-4 rounded-md max-h-96 overflow-y-auto\",\n          children: subtitles.map((subtitle, index) => /*#__PURE__*/_jsxDEV(motion.p, {\n            initial: {\n              opacity: 0,\n              x: -20\n            },\n            animate: {\n              opacity: 1,\n              x: 0\n            },\n            transition: {\n              delay: index * 0.05\n            },\n            className: \"mb-2\",\n            children: subtitle.text\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"9OAJvG8716dcjlLqCL+t65k9e+Y=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useCallback","motion","jsxDEV","_jsxDEV","PROXY_URL","MAX_RETRIES","RETRY_DELAY","languages","code","name","available","Home","_s","url","setUrl","videoId","setVideoId","selectedLanguage","setSelectedLanguage","subtitles","setSubtitles","loading","setLoading","loadingStatus","setLoadingStatus","error","setError","handleUrlChange","e","newUrl","target","value","fetchWithRetry","options","retries","response","fetch","ok","errorData","json","Error","getErrorMessage","status","console","log","Promise","resolve","setTimeout","extractVideoId","regExp","match","length","fetchSubtitles","extractedVideoId","tracksResponse","tracksData","Array","isArray","selectedTrack","find","track","languageCode","kind","subtitlesResponse","id","subtitlesData","message","downloadSubtitles","textContent","map","subtitle","text","join","blob","Blob","type","window","URL","createObjectURL","link","document","createElement","href","filename","setAttribute","body","appendChild","click","removeChild","revokeObjectURL","div","initial","opacity","y","animate","exit","className","children","h1","fileName","_jsxFileName","lineNumber","columnNumber","scale","htmlFor","onChange","placeholder","lang","button","whileHover","whileTap","onClick","disabled","index","p","x","transition","delay","_c","$RefreshReg$"],"sources":["D:/YoutubeSubtitleExtractor/src/components/Home.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { motion } from 'framer-motion';\n\nconst PROXY_URL = 'http://localhost:3001';\nconst MAX_RETRIES = 3;\nconst RETRY_DELAY = 500;\n\nconst languages = [\n  { code: 'en', name: 'English', available: true },\n  { code: 'hi', name: 'Hindi', available: true },\n  { code: 'es', name: 'Spanish', available: true },\n  { code: 'fr', name: 'French', available: true },\n  { code: 'de', name: 'German', available: true },\n  { code: 'it', name: 'Italian', available: true },\n  { code: 'pt', name: 'Portuguese', available: true },\n  { code: 'ru', name: 'Russian', available: true },\n  { code: 'ja', name: 'Japanese', available: true },\n  { code: 'ko', name: 'Korean', available: true },\n  { code: 'zh', name: 'Chinese', available: true }\n];\n\nfunction Home() {\n  const [url, setUrl] = useState('');\n  const [videoId, setVideoId] = useState('');\n  const [selectedLanguage, setSelectedLanguage] = useState('en');\n  const [subtitles, setSubtitles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loadingStatus, setLoadingStatus] = useState('');\n  const [error, setError] = useState('');\n\n  const handleUrlChange = useCallback((e) => {\n    const newUrl = e.target.value;\n    setUrl(newUrl);\n    \n    if (newUrl !== url) {\n      setSubtitles([]);\n      setError('');\n    }\n  }, [url]);\n\n  const fetchWithRetry = async (url, options = {}, retries = MAX_RETRIES) => {\n    try {\n      const response = await fetch(url, options);\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || getErrorMessage(response.status));\n      }\n      return await response.json();\n    } catch (error) {\n      if (retries > 0) {\n        console.log(`Retrying... ${retries} attempts left`);\n        await new Promise(resolve => setTimeout(resolve, RETRY_DELAY));\n        return fetchWithRetry(url, options, retries - 1);\n      }\n      throw error;\n    }\n  };\n\n  const getErrorMessage = (status) => {\n    switch (status) {\n      case 400:\n        return 'Invalid request. Please check your input.';\n      case 404:\n        return 'No captions found for this video. Please try another video.';\n      case 500:\n        return 'Server error. Please try again later.';\n      default:\n        return 'Something went wrong. Please try again.';\n    }\n  };\n\n  const extractVideoId = (url) => {\n    const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n    const match = url.match(regExp);\n    return (match && match[2].length === 11) ? match[2] : null;\n  };\n\n  const fetchSubtitles = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      setSubtitles(null);\n\n      // Extract video ID from URL\n      const extractedVideoId = extractVideoId(url);\n      if (!extractedVideoId) {\n        setError('Please enter a valid YouTube URL');\n        setLoading(false);\n        return;\n      }\n      setVideoId(extractedVideoId);\n\n      // Fetch available caption tracks\n      setLoadingStatus('Fetching available captions...');\n      const tracksResponse = await fetchWithRetry(`${PROXY_URL}/api/subtitles/list?videoId=${extractedVideoId}`);\n      const tracksData = await tracksResponse.json();\n\n      if (!tracksData || !Array.isArray(tracksData) || tracksData.length === 0) {\n        setError('No captions available for this video. Please try another video.');\n        setLoading(false);\n        return;\n      }\n\n      // Find the selected language track\n      let selectedTrack = tracksData.find(track => track.languageCode === selectedLanguage);\n      \n      // If no manual captions found, try auto-generated\n      if (!selectedTrack) {\n        setLoadingStatus(`No manual captions found for ${selectedLanguage}. Trying auto-generated captions...`);\n        selectedTrack = tracksData.find(track => \n          track.languageCode === selectedLanguage && \n          track.kind === 'asr'\n        );\n      }\n\n      // If still no captions found, try English as fallback\n      if (!selectedTrack) {\n        setLoadingStatus('No captions found in selected language. Trying English captions...');\n        selectedTrack = tracksData.find(track => track.languageCode === 'en');\n      }\n\n      // If still no captions, show error\n      if (!selectedTrack) {\n        setError('No captions available for this video. Please try another video.');\n        setLoading(false);\n        return;\n      }\n\n      // Fetch subtitles\n      setLoadingStatus('Fetching subtitles...');\n      const subtitlesResponse = await fetchWithRetry(\n        `${PROXY_URL}/api/subtitles/fetch?videoId=${extractedVideoId}&trackId=${selectedTrack.id}`\n      );\n      const subtitlesData = await subtitlesResponse.json();\n\n      if (!subtitlesData || !subtitlesData.subtitles || !Array.isArray(subtitlesData.subtitles)) {\n        setError('Unable to fetch subtitles. Please try again later.');\n        setLoading(false);\n        return;\n      }\n\n      setSubtitles(subtitlesData.subtitles);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching subtitles:', error);\n      setError(error.message || 'An error occurred while fetching subtitles. Please try again.');\n      setLoading(false);\n    }\n  };\n\n  const downloadSubtitles = () => {\n    if (subtitles.length === 0) return;\n\n    const textContent = subtitles.map(subtitle => subtitle.text).join('\\n\\n');\n    const blob = new Blob([textContent], { type: 'text/plain;charset=utf-8' });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    \n    const filename = `subtitles_${videoId}_${selectedLanguage}.txt`;\n    link.setAttribute('download', filename);\n    \n    document.body.appendChild(link);\n    link.click();\n    \n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(url);\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      exit={{ opacity: 0, y: -20 }}\n      className=\"container mx-auto px-4 py-8\"\n    >\n      <motion.h1 \n        initial={{ opacity: 0, y: -20 }}\n        animate={{ opacity: 1, y: 0 }}\n        className=\"text-3xl font-bold text-center mb-8\"\n      >\n        YouTube Subtitle Extractor\n      </motion.h1>\n\n      <motion.div \n        initial={{ opacity: 0, scale: 0.95 }}\n        animate={{ opacity: 1, scale: 1 }}\n        className=\"max-w-2xl mx-auto bg-white rounded-lg shadow-lg p-6\"\n      >\n        <div className=\"space-y-4\">\n          <div>\n            <label htmlFor=\"url\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              YouTube URL\n            </label>\n            <input\n              type=\"text\"\n              id=\"url\"\n              value={url}\n              onChange={handleUrlChange}\n              placeholder=\"Enter YouTube video URL\"\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"language\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Language\n            </label>\n            <select\n              id=\"language\"\n              value={selectedLanguage}\n              onChange={(e) => setSelectedLanguage(e.target.value)}\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n            >\n              {languages.map((lang) => (\n                <option key={lang.code} value={lang.code}>\n                  {lang.name}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <motion.button\n            whileHover={{ scale: 1.02 }}\n            whileTap={{ scale: 0.98 }}\n            onClick={fetchSubtitles}\n            disabled={loading || !url}\n            className={`w-full py-2 px-4 rounded-md text-white font-medium ${\n              loading || !url\n                ? 'bg-gray-400 cursor-not-allowed'\n                : 'bg-blue-600 hover:bg-blue-700'\n            }`}\n          >\n            {loading ? 'Extracting...' : 'Extract Subtitles'}\n          </motion.button>\n        </div>\n\n        {loadingStatus && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            className=\"mt-4 text-center text-gray-600\"\n          >\n            {loadingStatus}\n          </motion.div>\n        )}\n\n        {error && (\n          <motion.div\n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"mt-4 p-4 bg-red-50 border border-red-200 rounded-md text-red-600\"\n          >\n            {error}\n          </motion.div>\n        )}\n\n        {subtitles && subtitles.length > 0 && (\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"mt-8\"\n          >\n            <div className=\"flex justify-between items-center mb-4\">\n              <h2 className=\"text-xl font-bold\">Extracted Subtitles</h2>\n              <motion.button\n                whileHover={{ scale: 1.05 }}\n                whileTap={{ scale: 0.95 }}\n                onClick={downloadSubtitles}\n                className=\"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700\"\n              >\n                Download\n              </motion.button>\n            </div>\n            <div className=\"bg-gray-50 p-4 rounded-md max-h-96 overflow-y-auto\">\n              {subtitles.map((subtitle, index) => (\n                <motion.p\n                  key={index}\n                  initial={{ opacity: 0, x: -20 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  transition={{ delay: index * 0.05 }}\n                  className=\"mb-2\"\n                >\n                  {subtitle.text}\n                </motion.p>\n              ))}\n            </div>\n          </motion.div>\n        )}\n      </motion.div>\n    </motion.div>\n  );\n}\n\nexport default Home; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}