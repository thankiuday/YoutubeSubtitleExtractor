{"ast":null,"code":"var _jsxFileName = \"D:\\\\YoutubeSubtitleExtractor\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PROXY_URL = 'http://localhost:3001';\nconst MAX_RETRIES = 3;\nconst RETRY_DELAY = 1000;\nfunction App() {\n  _s();\n  const [videoUrl, setVideoUrl] = useState('');\n  const [videoId, setVideoId] = useState('');\n  const [selectedLanguage, setSelectedLanguage] = useState('en');\n  const [subtitles, setSubtitles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [availableTracks, setAvailableTracks] = useState([]);\n  const languages = [{\n    code: 'en',\n    name: 'English',\n    available: true\n  }, {\n    code: 'hi',\n    name: 'Hindi (Coming Soon)',\n    available: false\n  }, {\n    code: 'es',\n    name: 'Spanish (Coming Soon)',\n    available: false\n  }, {\n    code: 'fr',\n    name: 'French (Coming Soon)',\n    available: false\n  }, {\n    code: 'de',\n    name: 'German (Coming Soon)',\n    available: false\n  }, {\n    code: 'it',\n    name: 'Italian (Coming Soon)',\n    available: false\n  }, {\n    code: 'pt',\n    name: 'Portuguese (Coming Soon)',\n    available: false\n  }, {\n    code: 'ru',\n    name: 'Russian (Coming Soon)',\n    available: false\n  }, {\n    code: 'ja',\n    name: 'Japanese (Coming Soon)',\n    available: false\n  }, {\n    code: 'ko',\n    name: 'Korean (Coming Soon)',\n    available: false\n  }, {\n    code: 'zh',\n    name: 'Chinese (Coming Soon)',\n    available: false\n  }];\n  const extractVideoId = url => {\n    const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n    const match = url.match(regExp);\n    return match && match[2].length === 11 ? match[2] : null;\n  };\n  const fetchWithRetry = async (url, options = {}, retries = MAX_RETRIES) => {\n    try {\n      const response = await fetch(url, options);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return await response.json();\n    } catch (error) {\n      if (retries > 0) {\n        console.log(`Retrying... ${retries} attempts left`);\n        await new Promise(resolve => setTimeout(resolve, RETRY_DELAY));\n        return fetchWithRetry(url, options, retries - 1);\n      }\n      throw error;\n    }\n  };\n  const handleUrlSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setSubtitles([]);\n    setAvailableTracks([]);\n    const id = extractVideoId(videoUrl);\n    if (!id) {\n      setError('Invalid YouTube URL');\n      return;\n    }\n    setVideoId(id);\n    setLoading(true);\n    try {\n      // First get available tracks\n      const tracks = await fetchWithRetry(`${PROXY_URL}/api/subtitles/list?videoId=${id}`);\n      setAvailableTracks(tracks);\n\n      // Then fetch subtitles for the selected language\n      const response = await fetchWithRetry(`${PROXY_URL}/api/subtitles/fetch?videoId=${id}&trackId=${selectedLanguage}`);\n      setSubtitles(response.subtitles);\n    } catch (error) {\n      console.error('Error:', error);\n      setError(error.message || 'Failed to fetch subtitles');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleLanguageChange = async e => {\n    const newLanguage = e.target.value;\n    setSelectedLanguage(newLanguage);\n    setError('');\n    setSubtitles([]);\n    if (videoId) {\n      setLoading(true);\n      try {\n        const response = await fetchWithRetry(`${PROXY_URL}/api/subtitles/fetch?videoId=${videoId}&trackId=${newLanguage}`);\n        setSubtitles(response.subtitles);\n      } catch (error) {\n        console.error('Error:', error);\n        setError(error.message || 'Failed to fetch subtitles');\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n  const handleCopy = () => {\n    const text = subtitles.map(sub => sub.text).join('\\n');\n    navigator.clipboard.writeText(text).then(() => alert('Subtitles copied to clipboard!')).catch(err => console.error('Failed to copy:', err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"YouTube Subtitle Extractor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleUrlSubmit,\n        className: \"input-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: videoUrl,\n          onChange: e => setVideoUrl(e.target.value),\n          placeholder: \"Enter YouTube URL\",\n          className: \"url-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedLanguage,\n          onChange: handleLanguageChange,\n          className: \"language-select\",\n          children: languages.map(lang => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: lang.code,\n            disabled: !lang.available,\n            style: {\n              color: lang.available ? 'black' : 'gray'\n            },\n            children: lang.name\n          }, lang.code, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          className: \"submit-button\",\n          children: loading ? 'Loading...' : 'Extract Subtitles'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 19\n      }, this), subtitles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subtitles-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"subtitles-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Subtitles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCopy,\n            className: \"copy-button\",\n            children: \"Copy All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"subtitles-content\",\n          children: subtitles.map((subtitle, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: subtitle.text\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5+CvSQ8JhbZjFmki/YaGWIF9sGE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PROXY_URL","MAX_RETRIES","RETRY_DELAY","App","_s","videoUrl","setVideoUrl","videoId","setVideoId","selectedLanguage","setSelectedLanguage","subtitles","setSubtitles","loading","setLoading","error","setError","availableTracks","setAvailableTracks","languages","code","name","available","extractVideoId","url","regExp","match","length","fetchWithRetry","options","retries","response","fetch","ok","Error","status","json","console","log","Promise","resolve","setTimeout","handleUrlSubmit","e","preventDefault","id","tracks","message","handleLanguageChange","newLanguage","target","value","handleCopy","text","map","sub","join","navigator","clipboard","writeText","then","alert","catch","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","lang","disabled","style","color","onClick","subtitle","index","_c","$RefreshReg$"],"sources":["D:/YoutubeSubtitleExtractor/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css';\r\n\r\nconst PROXY_URL = 'http://localhost:3001';\r\nconst MAX_RETRIES = 3;\r\nconst RETRY_DELAY = 1000;\r\n\r\nfunction App() {\r\n  const [videoUrl, setVideoUrl] = useState('');\r\n  const [videoId, setVideoId] = useState('');\r\n  const [selectedLanguage, setSelectedLanguage] = useState('en');\r\n  const [subtitles, setSubtitles] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [availableTracks, setAvailableTracks] = useState([]);\r\n\r\n  const languages = [\r\n    { code: 'en', name: 'English', available: true },\r\n    { code: 'hi', name: 'Hindi (Coming Soon)', available: false },\r\n    { code: 'es', name: 'Spanish (Coming Soon)', available: false },\r\n    { code: 'fr', name: 'French (Coming Soon)', available: false },\r\n    { code: 'de', name: 'German (Coming Soon)', available: false },\r\n    { code: 'it', name: 'Italian (Coming Soon)', available: false },\r\n    { code: 'pt', name: 'Portuguese (Coming Soon)', available: false },\r\n    { code: 'ru', name: 'Russian (Coming Soon)', available: false },\r\n    { code: 'ja', name: 'Japanese (Coming Soon)', available: false },\r\n    { code: 'ko', name: 'Korean (Coming Soon)', available: false },\r\n    { code: 'zh', name: 'Chinese (Coming Soon)', available: false }\r\n  ];\r\n\r\n  const extractVideoId = (url) => {\r\n    const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\r\n    const match = url.match(regExp);\r\n    return (match && match[2].length === 11) ? match[2] : null;\r\n  };\r\n\r\n  const fetchWithRetry = async (url, options = {}, retries = MAX_RETRIES) => {\r\n    try {\r\n      const response = await fetch(url, options);\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      return await response.json();\r\n    } catch (error) {\r\n      if (retries > 0) {\r\n        console.log(`Retrying... ${retries} attempts left`);\r\n        await new Promise(resolve => setTimeout(resolve, RETRY_DELAY));\r\n        return fetchWithRetry(url, options, retries - 1);\r\n      }\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleUrlSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSubtitles([]);\r\n    setAvailableTracks([]);\r\n\r\n    const id = extractVideoId(videoUrl);\r\n    if (!id) {\r\n      setError('Invalid YouTube URL');\r\n      return;\r\n    }\r\n\r\n    setVideoId(id);\r\n    setLoading(true);\r\n\r\n    try {\r\n      // First get available tracks\r\n      const tracks = await fetchWithRetry(`${PROXY_URL}/api/subtitles/list?videoId=${id}`);\r\n      setAvailableTracks(tracks);\r\n\r\n      // Then fetch subtitles for the selected language\r\n      const response = await fetchWithRetry(\r\n        `${PROXY_URL}/api/subtitles/fetch?videoId=${id}&trackId=${selectedLanguage}`\r\n      );\r\n      setSubtitles(response.subtitles);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setError(error.message || 'Failed to fetch subtitles');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleLanguageChange = async (e) => {\r\n    const newLanguage = e.target.value;\r\n    setSelectedLanguage(newLanguage);\r\n    setError('');\r\n    setSubtitles([]);\r\n\r\n    if (videoId) {\r\n      setLoading(true);\r\n      try {\r\n        const response = await fetchWithRetry(\r\n          `${PROXY_URL}/api/subtitles/fetch?videoId=${videoId}&trackId=${newLanguage}`\r\n        );\r\n        setSubtitles(response.subtitles);\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n        setError(error.message || 'Failed to fetch subtitles');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    const text = subtitles.map(sub => sub.text).join('\\n');\r\n    navigator.clipboard.writeText(text)\r\n      .then(() => alert('Subtitles copied to clipboard!'))\r\n      .catch(err => console.error('Failed to copy:', err));\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>YouTube Subtitle Extractor</h1>\r\n        <form onSubmit={handleUrlSubmit} className=\"input-form\">\r\n          <input\r\n            type=\"text\"\r\n            value={videoUrl}\r\n            onChange={(e) => setVideoUrl(e.target.value)}\r\n            placeholder=\"Enter YouTube URL\"\r\n            className=\"url-input\"\r\n          />\r\n          <select \r\n            value={selectedLanguage} \r\n            onChange={handleLanguageChange}\r\n            className=\"language-select\"\r\n          >\r\n            {languages.map(lang => (\r\n              <option \r\n                key={lang.code} \r\n                value={lang.code}\r\n                disabled={!lang.available}\r\n                style={{ color: lang.available ? 'black' : 'gray' }}\r\n              >\r\n                {lang.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <button type=\"submit\" disabled={loading} className=\"submit-button\">\r\n            {loading ? 'Loading...' : 'Extract Subtitles'}\r\n          </button>\r\n        </form>\r\n\r\n        {error && <div className=\"error-message\">{error}</div>}\r\n\r\n        {subtitles.length > 0 && (\r\n          <div className=\"subtitles-container\">\r\n            <div className=\"subtitles-header\">\r\n              <h2>Subtitles</h2>\r\n              <button onClick={handleCopy} className=\"copy-button\">\r\n                Copy All\r\n              </button>\r\n            </div>\r\n            <div className=\"subtitles-content\">\r\n              {subtitles.map((subtitle, index) => (\r\n                <p key={index}>{subtitle.text}</p>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,SAAS,GAAG,uBAAuB;AACzC,MAAMC,WAAW,GAAG,CAAC;AACrB,MAAMC,WAAW,GAAG,IAAI;AAExB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACoB,eAAe,EAAEC,kBAAkB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMsB,SAAS,GAAG,CAChB;IAAEC,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE,SAAS;IAAEC,SAAS,EAAE;EAAK,CAAC,EAChD;IAAEF,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE,qBAAqB;IAAEC,SAAS,EAAE;EAAM,CAAC,EAC7D;IAAEF,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE,uBAAuB;IAAEC,SAAS,EAAE;EAAM,CAAC,EAC/D;IAAEF,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE,sBAAsB;IAAEC,SAAS,EAAE;EAAM,CAAC,EAC9D;IAAEF,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE,sBAAsB;IAAEC,SAAS,EAAE;EAAM,CAAC,EAC9D;IAAEF,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE,uBAAuB;IAAEC,SAAS,EAAE;EAAM,CAAC,EAC/D;IAAEF,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE,0BAA0B;IAAEC,SAAS,EAAE;EAAM,CAAC,EAClE;IAAEF,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE,uBAAuB;IAAEC,SAAS,EAAE;EAAM,CAAC,EAC/D;IAAEF,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE,wBAAwB;IAAEC,SAAS,EAAE;EAAM,CAAC,EAChE;IAAEF,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE,sBAAsB;IAAEC,SAAS,EAAE;EAAM,CAAC,EAC9D;IAAEF,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE,uBAAuB;IAAEC,SAAS,EAAE;EAAM,CAAC,CAChE;EAED,MAAMC,cAAc,GAAIC,GAAG,IAAK;IAC9B,MAAMC,MAAM,GAAG,8DAA8D;IAC7E,MAAMC,KAAK,GAAGF,GAAG,CAACE,KAAK,CAACD,MAAM,CAAC;IAC/B,OAAQC,KAAK,IAAIA,KAAK,CAAC,CAAC,CAAC,CAACC,MAAM,KAAK,EAAE,GAAID,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI;EAC5D,CAAC;EAED,MAAME,cAAc,GAAG,MAAAA,CAAOJ,GAAG,EAAEK,OAAO,GAAG,CAAC,CAAC,EAAEC,OAAO,GAAG7B,WAAW,KAAK;IACzE,IAAI;MACF,MAAM8B,QAAQ,GAAG,MAAMC,KAAK,CAACR,GAAG,EAAEK,OAAO,CAAC;MAC1C,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;MAC3D;MACA,OAAO,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOrB,KAAK,EAAE;MACd,IAAIe,OAAO,GAAG,CAAC,EAAE;QACfO,OAAO,CAACC,GAAG,CAAC,eAAeR,OAAO,gBAAgB,CAAC;QACnD,MAAM,IAAIS,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAEtC,WAAW,CAAC,CAAC;QAC9D,OAAO0B,cAAc,CAACJ,GAAG,EAAEK,OAAO,EAAEC,OAAO,GAAG,CAAC,CAAC;MAClD;MACA,MAAMf,KAAK;IACb;EACF,CAAC;EAED,MAAM2B,eAAe,GAAG,MAAOC,CAAC,IAAK;IACnCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB5B,QAAQ,CAAC,EAAE,CAAC;IACZJ,YAAY,CAAC,EAAE,CAAC;IAChBM,kBAAkB,CAAC,EAAE,CAAC;IAEtB,MAAM2B,EAAE,GAAGtB,cAAc,CAAClB,QAAQ,CAAC;IACnC,IAAI,CAACwC,EAAE,EAAE;MACP7B,QAAQ,CAAC,qBAAqB,CAAC;MAC/B;IACF;IAEAR,UAAU,CAACqC,EAAE,CAAC;IACd/B,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF;MACA,MAAMgC,MAAM,GAAG,MAAMlB,cAAc,CAAC,GAAG5B,SAAS,+BAA+B6C,EAAE,EAAE,CAAC;MACpF3B,kBAAkB,CAAC4B,MAAM,CAAC;;MAE1B;MACA,MAAMf,QAAQ,GAAG,MAAMH,cAAc,CACnC,GAAG5B,SAAS,gCAAgC6C,EAAE,YAAYpC,gBAAgB,EAC5E,CAAC;MACDG,YAAY,CAACmB,QAAQ,CAACpB,SAAS,CAAC;IAClC,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdsB,OAAO,CAACtB,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BC,QAAQ,CAACD,KAAK,CAACgC,OAAO,IAAI,2BAA2B,CAAC;IACxD,CAAC,SAAS;MACRjC,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMkC,oBAAoB,GAAG,MAAOL,CAAC,IAAK;IACxC,MAAMM,WAAW,GAAGN,CAAC,CAACO,MAAM,CAACC,KAAK;IAClCzC,mBAAmB,CAACuC,WAAW,CAAC;IAChCjC,QAAQ,CAAC,EAAE,CAAC;IACZJ,YAAY,CAAC,EAAE,CAAC;IAEhB,IAAIL,OAAO,EAAE;MACXO,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACF,MAAMiB,QAAQ,GAAG,MAAMH,cAAc,CACnC,GAAG5B,SAAS,gCAAgCO,OAAO,YAAY0C,WAAW,EAC5E,CAAC;QACDrC,YAAY,CAACmB,QAAQ,CAACpB,SAAS,CAAC;MAClC,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdsB,OAAO,CAACtB,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAC9BC,QAAQ,CAACD,KAAK,CAACgC,OAAO,IAAI,2BAA2B,CAAC;MACxD,CAAC,SAAS;QACRjC,UAAU,CAAC,KAAK,CAAC;MACnB;IACF;EACF,CAAC;EAED,MAAMsC,UAAU,GAAGA,CAAA,KAAM;IACvB,MAAMC,IAAI,GAAG1C,SAAS,CAAC2C,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACF,IAAI,CAAC,CAACG,IAAI,CAAC,IAAI,CAAC;IACtDC,SAAS,CAACC,SAAS,CAACC,SAAS,CAACN,IAAI,CAAC,CAChCO,IAAI,CAAC,MAAMC,KAAK,CAAC,gCAAgC,CAAC,CAAC,CACnDC,KAAK,CAACC,GAAG,IAAI1B,OAAO,CAACtB,KAAK,CAAC,iBAAiB,EAAEgD,GAAG,CAAC,CAAC;EACxD,CAAC;EAED,oBACEhE,OAAA;IAAKiE,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBlE,OAAA;MAAQiE,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5BlE,OAAA;QAAAkE,QAAA,EAAI;MAA0B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnCtE,OAAA;QAAMuE,QAAQ,EAAE5B,eAAgB;QAACsB,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACrDlE,OAAA;UACEwE,IAAI,EAAC,MAAM;UACXpB,KAAK,EAAE9C,QAAS;UAChBmE,QAAQ,EAAG7B,CAAC,IAAKrC,WAAW,CAACqC,CAAC,CAACO,MAAM,CAACC,KAAK,CAAE;UAC7CsB,WAAW,EAAC,mBAAmB;UAC/BT,SAAS,EAAC;QAAW;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC,eACFtE,OAAA;UACEoD,KAAK,EAAE1C,gBAAiB;UACxB+D,QAAQ,EAAExB,oBAAqB;UAC/BgB,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAE1B9C,SAAS,CAACmC,GAAG,CAACoB,IAAI,iBACjB3E,OAAA;YAEEoD,KAAK,EAAEuB,IAAI,CAACtD,IAAK;YACjBuD,QAAQ,EAAE,CAACD,IAAI,CAACpD,SAAU;YAC1BsD,KAAK,EAAE;cAAEC,KAAK,EAAEH,IAAI,CAACpD,SAAS,GAAG,OAAO,GAAG;YAAO,CAAE;YAAA2C,QAAA,EAEnDS,IAAI,CAACrD;UAAI,GALLqD,IAAI,CAACtD,IAAI;YAAA8C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAMR,CACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC,eACTtE,OAAA;UAAQwE,IAAI,EAAC,QAAQ;UAACI,QAAQ,EAAE9D,OAAQ;UAACmD,SAAS,EAAC,eAAe;UAAAC,QAAA,EAC/DpD,OAAO,GAAG,YAAY,GAAG;QAAmB;UAAAqD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,EAENtD,KAAK,iBAAIhB,OAAA;QAAKiE,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAElD;MAAK;QAAAmD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EAErD1D,SAAS,CAACgB,MAAM,GAAG,CAAC,iBACnB5B,OAAA;QAAKiE,SAAS,EAAC,qBAAqB;QAAAC,QAAA,gBAClClE,OAAA;UAAKiE,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC/BlE,OAAA;YAAAkE,QAAA,EAAI;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClBtE,OAAA;YAAQ+E,OAAO,EAAE1B,UAAW;YAACY,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAC;UAErD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACNtE,OAAA;UAAKiE,SAAS,EAAC,mBAAmB;UAAAC,QAAA,EAC/BtD,SAAS,CAAC2C,GAAG,CAAC,CAACyB,QAAQ,EAAEC,KAAK,kBAC7BjF,OAAA;YAAAkE,QAAA,EAAgBc,QAAQ,CAAC1B;UAAI,GAArB2B,KAAK;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAoB,CAClC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACjE,EAAA,CAjKQD,GAAG;AAAA8E,EAAA,GAAH9E,GAAG;AAmKZ,eAAeA,GAAG;AAAC,IAAA8E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}