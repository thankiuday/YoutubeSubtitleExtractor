{"ast":null,"code":"var _jsxFileName = \"D:\\\\YoutubeSubtitleExtractor\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PROXY_URL = 'http://localhost:3001';\nconst MAX_RETRIES = 3;\nconst RETRY_DELAY = 500;\nconst languages = [{\n  code: 'en',\n  name: 'English',\n  available: true\n}, {\n  code: 'hi',\n  name: 'Hindi (Coming Soon)',\n  available: false\n}, {\n  code: 'es',\n  name: 'Spanish (Coming Soon)',\n  available: false\n}, {\n  code: 'fr',\n  name: 'French (Coming Soon)',\n  available: false\n}, {\n  code: 'de',\n  name: 'German (Coming Soon)',\n  available: false\n}, {\n  code: 'it',\n  name: 'Italian (Coming Soon)',\n  available: false\n}, {\n  code: 'pt',\n  name: 'Portuguese (Coming Soon)',\n  available: false\n}, {\n  code: 'ru',\n  name: 'Russian (Coming Soon)',\n  available: false\n}, {\n  code: 'ja',\n  name: 'Japanese (Coming Soon)',\n  available: false\n}, {\n  code: 'ko',\n  name: 'Korean (Coming Soon)',\n  available: false\n}, {\n  code: 'zh',\n  name: 'Chinese (Coming Soon)',\n  available: false\n}];\nfunction App() {\n  _s();\n  const [url, setUrl] = useState('');\n  const [videoId, setVideoId] = useState('');\n  const [selectedLanguage, setSelectedLanguage] = useState('en');\n  const [subtitles, setSubtitles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [retryCount, setRetryCount] = useState(0);\n\n  // Debounced URL input handler\n  const handleUrlChange = useCallback(e => {\n    const newUrl = e.target.value;\n    setUrl(newUrl);\n\n    // Clear previous results when URL changes\n    if (newUrl !== url) {\n      setSubtitles([]);\n      setError('');\n    }\n  }, [url]);\n  const fetchWithRetry = async (url, options = {}, retries = MAX_RETRIES) => {\n    try {\n      const response = await fetch(url, options);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return await response.json();\n    } catch (error) {\n      if (retries > 0) {\n        console.log(`Retrying... ${retries} attempts left`);\n        await new Promise(resolve => setTimeout(resolve, RETRY_DELAY));\n        return fetchWithRetry(url, options, retries - 1);\n      }\n      throw error;\n    }\n  };\n  const extractVideoId = url => {\n    const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n    const match = url.match(regExp);\n    return match && match[2].length === 11 ? match[2] : null;\n  };\n  const fetchSubtitles = async () => {\n    const startTime = performance.now();\n    setLoading(true);\n    setError('');\n    setSubtitles([]);\n    setRetryCount(0);\n    try {\n      const id = extractVideoId(url);\n      if (!id) {\n        throw new Error('Invalid YouTube URL');\n      }\n      setVideoId(id);\n      console.log('Video ID:', id);\n      console.log('Selected language:', selectedLanguage);\n\n      // First check if video exists and get available caption tracks\n      console.log('Fetching caption tracks:', `${PROXY_URL}/api/subtitles/list?videoId=${id}`);\n      const tracksStartTime = performance.now();\n      const tracks = await fetchWithRetry(`${PROXY_URL}/api/subtitles/list?videoId=${id}`);\n      const tracksEndTime = performance.now();\n      console.log(`Caption tracks fetch took: ${(tracksEndTime - tracksStartTime).toFixed(2)}ms`);\n      console.log('Available tracks:', tracks);\n      if (!tracks || tracks.length === 0) {\n        throw new Error('No captions available for this video');\n      }\n\n      // Find the selected language track or fallback to first available\n      const track = tracks.find(t => t.languageCode === selectedLanguage) || tracks[0];\n      console.log('Fetching subtitles for track:', track);\n\n      // Fetch the actual subtitles\n      const subtitlesStartTime = performance.now();\n      const response = await fetchWithRetry(`${PROXY_URL}/api/subtitles/fetch?videoId=${id}&trackId=${track.languageCode}`);\n      const subtitlesEndTime = performance.now();\n      console.log(`Subtitles fetch took: ${(subtitlesEndTime - subtitlesStartTime).toFixed(2)}ms`);\n      console.log('Received subtitles data:', response);\n      if (!response.subtitles || response.subtitles.length === 0) {\n        throw new Error('No subtitle content found');\n      }\n      setSubtitles(response.subtitles);\n      const endTime = performance.now();\n      console.log(`Total extraction time: ${(endTime - startTime).toFixed(2)}ms`);\n    } catch (error) {\n      console.error('Error:', error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 py-6 flex flex-col justify-center sm:py-12\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative py-3 sm:max-w-xl sm:mx-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative px-4 py-10 bg-white shadow-lg sm:rounded-3xl sm:p-20\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"max-w-md mx-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"divide-y divide-gray-200\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"py-8 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-3xl font-bold text-center mb-8\",\n                children: \"YouTube Subtitle Extractor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-4\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: url,\n                  onChange: handleUrlChange,\n                  placeholder: \"Enter YouTube URL\",\n                  className: \"w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-4\",\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: selectedLanguage,\n                  onChange: e => setSelectedLanguage(e.target.value),\n                  className: \"w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\",\n                  children: languages.map(lang => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: lang.code,\n                    disabled: !lang.available,\n                    className: !lang.available ? 'text-gray-400' : '',\n                    children: lang.name\n                  }, lang.code, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: fetchSubtitles,\n                disabled: loading || !url,\n                className: `w-full py-2 px-4 rounded-lg text-white font-semibold ${loading || !url ? 'bg-gray-400 cursor-not-allowed' : 'bg-blue-500 hover:bg-blue-600'}`,\n                children: loading ? 'Loading...' : 'Extract Subtitles'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-4 p-4 bg-red-100 text-red-700 rounded-lg\",\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this), subtitles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-8\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \"text-xl font-semibold mb-4\",\n                  children: \"Subtitles:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-gray-50 p-4 rounded-lg max-h-96 overflow-y-auto\",\n                  children: subtitles.map((subtitle, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"mb-2\",\n                    children: subtitle.text\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bRIjCpb/FDbCD4GYePmLc0eCaQw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","jsxDEV","_jsxDEV","PROXY_URL","MAX_RETRIES","RETRY_DELAY","languages","code","name","available","App","_s","url","setUrl","videoId","setVideoId","selectedLanguage","setSelectedLanguage","subtitles","setSubtitles","loading","setLoading","error","setError","retryCount","setRetryCount","handleUrlChange","e","newUrl","target","value","fetchWithRetry","options","retries","response","fetch","ok","Error","status","json","console","log","Promise","resolve","setTimeout","extractVideoId","regExp","match","length","fetchSubtitles","startTime","performance","now","id","tracksStartTime","tracks","tracksEndTime","toFixed","track","find","t","languageCode","subtitlesStartTime","subtitlesEndTime","endTime","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","map","lang","disabled","onClick","subtitle","index","text","_c","$RefreshReg$"],"sources":["D:/YoutubeSubtitleExtractor/src/App.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport './App.css';\r\n\r\nconst PROXY_URL = 'http://localhost:3001';\r\nconst MAX_RETRIES = 3;\r\nconst RETRY_DELAY = 500;\r\n\r\nconst languages = [\r\n  { code: 'en', name: 'English', available: true },\r\n  { code: 'hi', name: 'Hindi (Coming Soon)', available: false },\r\n  { code: 'es', name: 'Spanish (Coming Soon)', available: false },\r\n  { code: 'fr', name: 'French (Coming Soon)', available: false },\r\n  { code: 'de', name: 'German (Coming Soon)', available: false },\r\n  { code: 'it', name: 'Italian (Coming Soon)', available: false },\r\n  { code: 'pt', name: 'Portuguese (Coming Soon)', available: false },\r\n  { code: 'ru', name: 'Russian (Coming Soon)', available: false },\r\n  { code: 'ja', name: 'Japanese (Coming Soon)', available: false },\r\n  { code: 'ko', name: 'Korean (Coming Soon)', available: false },\r\n  { code: 'zh', name: 'Chinese (Coming Soon)', available: false }\r\n];\r\n\r\nfunction App() {\r\n  const [url, setUrl] = useState('');\r\n  const [videoId, setVideoId] = useState('');\r\n  const [selectedLanguage, setSelectedLanguage] = useState('en');\r\n  const [subtitles, setSubtitles] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [retryCount, setRetryCount] = useState(0);\r\n\r\n  // Debounced URL input handler\r\n  const handleUrlChange = useCallback((e) => {\r\n    const newUrl = e.target.value;\r\n    setUrl(newUrl);\r\n    \r\n    // Clear previous results when URL changes\r\n    if (newUrl !== url) {\r\n      setSubtitles([]);\r\n      setError('');\r\n    }\r\n  }, [url]);\r\n\r\n  const fetchWithRetry = async (url, options = {}, retries = MAX_RETRIES) => {\r\n    try {\r\n      const response = await fetch(url, options);\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      return await response.json();\r\n    } catch (error) {\r\n      if (retries > 0) {\r\n        console.log(`Retrying... ${retries} attempts left`);\r\n        await new Promise(resolve => setTimeout(resolve, RETRY_DELAY));\r\n        return fetchWithRetry(url, options, retries - 1);\r\n      }\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const extractVideoId = (url) => {\r\n    const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\r\n    const match = url.match(regExp);\r\n    return (match && match[2].length === 11) ? match[2] : null;\r\n  };\r\n\r\n  const fetchSubtitles = async () => {\r\n    const startTime = performance.now();\r\n    setLoading(true);\r\n    setError('');\r\n    setSubtitles([]);\r\n    setRetryCount(0);\r\n\r\n    try {\r\n      const id = extractVideoId(url);\r\n      if (!id) {\r\n        throw new Error('Invalid YouTube URL');\r\n      }\r\n      setVideoId(id);\r\n      console.log('Video ID:', id);\r\n      console.log('Selected language:', selectedLanguage);\r\n\r\n      // First check if video exists and get available caption tracks\r\n      console.log('Fetching caption tracks:', `${PROXY_URL}/api/subtitles/list?videoId=${id}`);\r\n      const tracksStartTime = performance.now();\r\n      const tracks = await fetchWithRetry(`${PROXY_URL}/api/subtitles/list?videoId=${id}`);\r\n      const tracksEndTime = performance.now();\r\n      console.log(`Caption tracks fetch took: ${(tracksEndTime - tracksStartTime).toFixed(2)}ms`);\r\n      console.log('Available tracks:', tracks);\r\n\r\n      if (!tracks || tracks.length === 0) {\r\n        throw new Error('No captions available for this video');\r\n      }\r\n\r\n      // Find the selected language track or fallback to first available\r\n      const track = tracks.find(t => t.languageCode === selectedLanguage) || tracks[0];\r\n      console.log('Fetching subtitles for track:', track);\r\n\r\n      // Fetch the actual subtitles\r\n      const subtitlesStartTime = performance.now();\r\n      const response = await fetchWithRetry(\r\n        `${PROXY_URL}/api/subtitles/fetch?videoId=${id}&trackId=${track.languageCode}`\r\n      );\r\n      const subtitlesEndTime = performance.now();\r\n      console.log(`Subtitles fetch took: ${(subtitlesEndTime - subtitlesStartTime).toFixed(2)}ms`);\r\n      console.log('Received subtitles data:', response);\r\n\r\n      if (!response.subtitles || response.subtitles.length === 0) {\r\n        throw new Error('No subtitle content found');\r\n      }\r\n\r\n      setSubtitles(response.subtitles);\r\n      const endTime = performance.now();\r\n      console.log(`Total extraction time: ${(endTime - startTime).toFixed(2)}ms`);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setError(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 py-6 flex flex-col justify-center sm:py-12\">\r\n      <div className=\"relative py-3 sm:max-w-xl sm:mx-auto\">\r\n        <div className=\"relative px-4 py-10 bg-white shadow-lg sm:rounded-3xl sm:p-20\">\r\n          <div className=\"max-w-md mx-auto\">\r\n            <div className=\"divide-y divide-gray-200\">\r\n              <div className=\"py-8 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\r\n                <h1 className=\"text-3xl font-bold text-center mb-8\">YouTube Subtitle Extractor</h1>\r\n                \r\n                <div className=\"mb-4\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value={url}\r\n                    onChange={handleUrlChange}\r\n                    placeholder=\"Enter YouTube URL\"\r\n                    className=\"w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"mb-4\">\r\n                  <select\r\n                    value={selectedLanguage}\r\n                    onChange={(e) => setSelectedLanguage(e.target.value)}\r\n                    className=\"w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  >\r\n                    {languages.map(lang => (\r\n                      <option \r\n                        key={lang.code} \r\n                        value={lang.code}\r\n                        disabled={!lang.available}\r\n                        className={!lang.available ? 'text-gray-400' : ''}\r\n                      >\r\n                        {lang.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n\r\n                <button\r\n                  onClick={fetchSubtitles}\r\n                  disabled={loading || !url}\r\n                  className={`w-full py-2 px-4 rounded-lg text-white font-semibold ${\r\n                    loading || !url\r\n                      ? 'bg-gray-400 cursor-not-allowed'\r\n                      : 'bg-blue-500 hover:bg-blue-600'\r\n                  }`}\r\n                >\r\n                  {loading ? 'Loading...' : 'Extract Subtitles'}\r\n                </button>\r\n\r\n                {error && (\r\n                  <div className=\"mt-4 p-4 bg-red-100 text-red-700 rounded-lg\">\r\n                    {error}\r\n                  </div>\r\n                )}\r\n\r\n                {subtitles.length > 0 && (\r\n                  <div className=\"mt-8\">\r\n                    <h2 className=\"text-xl font-semibold mb-4\">Subtitles:</h2>\r\n                    <div className=\"bg-gray-50 p-4 rounded-lg max-h-96 overflow-y-auto\">\r\n                      {subtitles.map((subtitle, index) => (\r\n                        <p key={index} className=\"mb-2\">\r\n                          {subtitle.text}\r\n                        </p>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}